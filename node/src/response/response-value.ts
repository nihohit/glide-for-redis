// automatically generated by the FlatBuffers compiler, do not modify

import { ConstantResponseTable } from '../response/constant-response-table.js';
import { Pointer } from '../response/pointer.js';
import { RequestError } from '../response/request-error.js';
import { StringTable } from '../response/string-table.js';


export enum ResponseValue {
  NONE = 0,
  resp_pointer = 1,
  constant_response = 2,
  request_error = 3,
  closing_error = 4
}

export function unionToResponseValue(
  type: ResponseValue,
  accessor: (obj:ConstantResponseTable|Pointer|RequestError|StringTable) => ConstantResponseTable|Pointer|RequestError|StringTable|null
): ConstantResponseTable|Pointer|RequestError|StringTable|null {
  switch(ResponseValue[type]) {
    case 'NONE': return null; 
    case 'resp_pointer': return accessor(new Pointer())! as Pointer;
    case 'constant_response': return accessor(new ConstantResponseTable())! as ConstantResponseTable;
    case 'request_error': return accessor(new RequestError())! as RequestError;
    case 'closing_error': return accessor(new StringTable())! as StringTable;
    default: return null;
  }
}

export function unionListToResponseValue(
  type: ResponseValue, 
  accessor: (index: number, obj:ConstantResponseTable|Pointer|RequestError|StringTable) => ConstantResponseTable|Pointer|RequestError|StringTable|null, 
  index: number
): ConstantResponseTable|Pointer|RequestError|StringTable|null {
  switch(ResponseValue[type]) {
    case 'NONE': return null; 
    case 'resp_pointer': return accessor(index, new Pointer())! as Pointer;
    case 'constant_response': return accessor(index, new ConstantResponseTable())! as ConstantResponseTable;
    case 'request_error': return accessor(index, new RequestError())! as RequestError;
    case 'closing_error': return accessor(index, new StringTable())! as StringTable;
    default: return null;
  }
}
